name: Release CLI Plugins

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: '18.x'
          cache: 'pnpm'
      - name: Reading Configuration
        id: release_config
        uses: rgarcia-phi/json-to-variables@v1.1.0
        with:
          filename: .github/config/release.json
          prefix: release
      - name: Installing dependencies of dev dependencies
        id: dev-dependencies-installation
        if: ${{env.release_releaseAll == 'true' || env.release_plugins_dev-dependencies == 'true'}}
        working-directory: ./packages/contentstack-dev-dependencies
        run: npm install
      - name: Compiling dev dependencies
        if: ${{ steps.dev-dependencies-installation.conclusion == 'success'  }}
        working-directory: ./packages/contentstack-dev-dependencies
        run: npm run prepack
      - name: Publishing dev dependencies
        uses: JS-DevTools/npm-publish@v2.2.1
        if: ${{ steps.dev-dependencies-installation.conclusion == 'success'  }}
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./packages/contentstack-dev-dependencies/package.json
      - name: Installing dependencies of utilities
        id: utilities-installation
        if: ${{env.release_releaseAll == 'true' || env.release_plugins_utilities == 'true'}}
        working-directory: ./packages/contentstack-utilities
        run: npm install
      - name: Compiling utilities
        if: ${{ steps.utilities-installation.conclusion == 'success'  }}
        working-directory: ./packages/contentstack-utilities
        run: npm run prepack
      - name: Publishing utilities
        uses: JS-DevTools/npm-publish@v2.2.1
        if: ${{ steps.utilities-installation.conclusion == 'success'  }}
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./packages/contentstack-utilities/package.json

      - uses: actions/checkout@v3.5.3
        with:
          ref: 'prod-qa-pipeline'
      - run: echo ${{ steps.publish-core.outputs.version  }} > version.md
      - uses: EndBug/add-and-commit@v9
        with:
          message: 'Released version'
      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create v${{ steps.publish-core.outputs.version }} --title "Release ${{ steps.publish-core.outputs.version }}" --generate-notes
